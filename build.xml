<?xml version="1.0" encoding="utf-8" ?>
<project name="Charba" default="build-bin" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" />

	<property name="ivy.revision" value="2.0" />

	<!-- 
		CHARBA project configuration 
	-->

	<property name="charba.built.by" value="www.pepstock.org" />
	<tstamp>
		<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
	</tstamp>

	<property name="src.dir" value="src" />
	<property name="classes.dir" value="classes" />
	<property name="javadoc.dir" value="javadoc" />

	<property name="dist.dir" value="dist" />

	<property name="bin.archive.file" value="${dist.dir}/charba-${ivy.revision}.jar" />
	<property name="sources.archive.file" value="${dist.dir}/charba-${ivy.revision}-sources.jar" />
	<property name="javadoc.archive.file" value="${dist.dir}/charba-${ivy.revision}-javadoc.jar" />

	<property name="artifact.pattern" value="${dist.dir}/[artifact]-[revision](-[classifier]).[ext]" />

	<!-- 
		JAVA compiler options 
	-->
	<property name="javac.debug" value="true" />
	<property name="javac.debuglevel" value="lines,vars,source" />
	<property name="javac.source" value="1.8" />
	<property name="javac.target" value="1.8" />
	<property name="javac.includeantruntime" value="false" />
	<property name="javac.nowarn" value="true" />

	<target name="clean" description="Cleans folders">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${classes.dir}" includes="**/*"/>
			<fileset dir="${dist.dir}" includes="**/*"/>
			<fileset dir="${javadoc.dir}" includes="**/*"/>
		</delete>
	</target>

	<!--
        IVY
    -->
	<target name="ivyRetrieve">
		<ivy:retrieve sync="true" pattern="lib-ivy/[artifact]-[revision](-[classifier]).[ext]" pathid="ivyPath" />
	</target>

	<target name="makePom">
		<property name="ivy.pom.name" value="Charba"/>
		<property name="ivy.pom.description" value="Charba, GWT wrapper for CHART.JS"/>
		<property name="ivy.pom.url" value="www.pepstock.org"/>
		<property name="ivy.pom.packaging" value="jar"/>

		<ivy:makepom ivyfile="ivy.xml" pomfile="${dist.dir}/charba-${ivy.revision}.pom" templatefile="pom.template" >
			<mapping conf="default" scope="compile" />
		</ivy:makepom>
	</target>

	<target name="ivyPublish-snapshot">
		<ivy:resolve />
		<ivy:publish resolver="nexus-snapshots" pubrevision="${ivy.revision}" forcedeliver="true" overwrite="true" publishivy="false">
			<artifacts pattern="${artifact.pattern}" />
		</ivy:publish>
	</target>

	<target name="ivyPublish-release">
		<ivy:resolve />
		<ivy:publish resolver="nexus-releases" pubrevision="${ivy.revision}" forcedeliver="true" overwrite="true" publishivy="false">
			<artifacts pattern="${artifact.pattern}" />
		</ivy:publish>
	</target>

	<target name="build-all" depends="build-bin, build-sources, build-javadoc" />

	<target name="build-sources">
		<jar jarfile="${sources.archive.file}">
			<fileset dir="${src.dir}" />
		</jar>
	</target>

	<target name="build-javadoc" depends="javadoc">
		<jar jarfile="${javadoc.archive.file}">
			<fileset dir="${javadoc.dir}" />
			<manifest>
				<section name="Charba">
					<attribute name="Version" value="${ivy.revision}" />
					<attribute name="Built-By" value="${charba.built.by}" />
					<attribute name="Creation-time" value="${TODAY}" />
				</section>
			</manifest>
		</jar>
	</target>

	<target name="build-bin" depends="compile">
		<jar jarfile="${bin.archive.file}">
			<fileset dir="${classes.dir}"/>
			<manifest>
				<section name="Charba">
					<attribute name="Version" value="${ivy.revision}" />
					<attribute name="Built-By" value="${charba.built.by}" />
					<attribute name="Creation-time" value="${TODAY}" />
				</section>
			</manifest>
		</jar>
	</target>

	<target name="compile" depends="clean, ivyRetrieve">
		<mkdir dir="${classes.dir}"/>
		<javac srcdir="${src.dir}" includes="**" encoding="utf-8" destdir="${classes.dir}" includeantruntime="${javac.includeantruntime}" source="${javac.source}" target="${javac.target}" nowarn="${javac.nowarn}" debug="${javac.debug}" debuglevel="${javac.debuglevel}" createMissingPackageInfoClass="false">
			<classpath refid="ivyPath"/>
		</javac>
		<!-- copy is necessary as GWT needs sources -->
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}"/>
		</copy>
	</target>

	<target name="javadoc" depends="ivyRetrieve">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${javadoc.dir}" includes="**/*"/>
		</delete>
		<javadoc destdir="${javadoc.dir}" useexternalfile="yes" author="true" version="true" use="true" 
			windowtitle="Charba, GWT wrapper for CHART.JS">
			<classpath>
				<path refid="ivyPath" />
				<fileset dir="${classes.dir}" />
				<pathelement path="${java.class.path}" />
			</classpath>
			<packageset dir="${src.dir}" defaultexcludes="yes">
				<include name="org/pepstock/**" />
			</packageset>
		</javadoc>
	</target>

	<!--
		IVY targets for Travis CI
	-->
	<property name="ivy.install.version" value="2.4.0" />
	<condition property="ivy.home" value="${env.IVY_HOME}">
		<isset property="env.IVY_HOME" />
	</condition>
	<property name="ivy.home" value="${user.home}/.ant" />
	<property name="ivy.jar.dir" value="${ivy.home}/lib" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	<target name="download-ivy" unless="offline">
		<mkdir dir="${ivy.jar.dir}"/>
		<!-- download Ivy from web site so that it can be used even without any special installation -->
		<get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
	             dest="${ivy.jar.file}" usetimestamp="true"/>
	</target>

	<target name="init-ivy" depends="download-ivy">
		<!-- try to load Ivy here from Ivy home, in case the user has not already dropped
	              it into Ant's lib dir (note that the latter copy will always take precedence).
	              We will not fail as long as local lib dir exists (it may be empty) and
	              Ivy is in at least one of Ant's lib dir or the local lib dir. -->
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar"/>

		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
	</target>

</project>